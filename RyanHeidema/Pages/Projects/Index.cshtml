@page
@using BoggleSolverCSharp;
@model RyanHeidema.Pages.Projects.IndexModel
@{
    ViewData["Title"] = "Ryan Heidema - Projects";
}
<nav class="navbar navbar-expand navbar-dark bg-dark sticky-top thick-border">
    <div class="container">
        <div>
            <ul class="navbar-nav mr-auto w-100">
            <li class="nav-item">
                <a class="nav-link" asp-page="../Index"><u>Home</u></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-page="../Index" asp-fragment="About"><u>About</u></a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" href="#allProjects"><u>Projects</u> <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-page="../Index" asp-fragment="Contact"><u>Contact</u></a>
            </li>
            </ul>
        </div>
    </div>
</nav>
<div class="pt-5" id="allProjects">
    <div class="text-center">
        <h1 class="display-4"><u>Projects</u></h1>
    </div>
    <div class="container py-4">
        <div class="card mb-5">
            <div class="card-header">
                <h5 class="mb-1"><u>Boggle Solver</u></h5>
                <p class="text-muted text-weight-light mb-0">backtracking, dfs</p>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <div class="row mb-3">
                        <div class="col-2"></div>
                        <div class="col-8">
                            <div class="text-center">
                                <p class="h5"><u>Input Letters</u></p>
                            </div>
                            <form method="post">
                                <div class="row py-1">
                                    <div class="col pr-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let00">
                                    </div>
                                    <div class="col pl-2 pr-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let01">
                                    </div>
                                    <div class="col pr-2 pl-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let02">
                                    </div>
                                    <div class="col pl-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let03">
                                    </div>
                                </div>
                                <div class="row py-1">
                                    <div class="col pr-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let10">
                                    </div>
                                    <div class="col pl-2 pr-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let11">
                                    </div>
                                    <div class="col pr-2 pl-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let12">
                                    </div>
                                    <div class="col pl-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let13">
                                    </div>
                                </div>
                                <div class="row py-1">
                                    <div class="col pr-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let20">
                                    </div>
                                    <div class="col pl-2 pr-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let21">
                                    </div>
                                    <div class="col pr-2 pl-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let22">
                                    </div>
                                    <div class="col pl-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let23">
                                    </div>
                                </div>
                                <div class="row py-1">
                                    <div class="col pr-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let30">
                                    </div>
                                    <div class="col pl-2 pr-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let31">
                                    </div>
                                    <div class="col pr-2 pl-1">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let32">
                                    </div>
                                    <div class="col pl-0">
                                        <input type="text" class="form-control" maxLength="1" asp-for="charList.let33">
                                    </div>
                                </div>
                                <div class="form-group row pt-2">
                                    <div class="col text-center">
                                        <input type="submit" value="Solve" class="btn btn-outline-dark rounded-0 mx-2" />
                                        <a asp-page="./Index" class="btn btn-outline-dark rounded-0 mx-2">Reset</a>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-2"></div>
                    </div>
                    @if(Model.Words != null)
                    {
                        <div class="row mb-3">
                            <div class="col">
                                <div class="text-center">
                                    <p class="h5"><u>Results</u></p>
                                </div>
                                    <p class="text-left h6 pb-2 text-orange-one">@Model.Words.Count words, @Model.totalScore points</p>
                                    <div class="row px-3">
                                        @for(int i = 0; i < @Model.Words.Count(); ++i)
                                        {
                                            switch (@Model.Words.ElementAt(i).Score)
                                                {
                                                    case 1:
                                                        <p> @Model.Words.ElementAt(i).Text (@Model.Words.ElementAt(i).Score pt)</p>
                                                        break;
                                                    case 11:
                                                        <p class="text-orange-one"> @Model.Words.ElementAt(i).Text (@Model.Words.ElementAt(i).Score pts)</p>
                                                        break;
                                                    default:
                                                        <p> @Model.Words.ElementAt(i).Text (@Model.Words.ElementAt(i).Score pts)</p>
                                                        break;
                                                }
                                            @if(i != @Model.Words.Count() - 1)
                                            {
                                                <p>,&nbsp;</p>
                                            }
                                        }
                                    </div>
                            </div>
                        </div>
                    }
                    <hr />
                    <div class="row">
                        <div class="col">
                            <div class="card-text">
                                <p>
                                    This project is a 4x4 Boggle solver using backtracking. My inspiration for this project came from my family which plays a lot of Boggle and wondered if I could write something to solve the board. After thinking for some time, I came up with an efficient algorithm to look for solutions.
                                </p>
                                <p>
                                    Originally, this was written in C++, but I adapted it to C# to interface with this website, which you can use above.
                                </p>
                                <p>
                                    Check out the GitHub to get in-depth coverage of the algorithm I implemented and the data structures I used to accomplish this!
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <p class="card-text text-muted mb-1"><i>Personal Project</i></p>
                        <p class="card-text text-muted text-weight-light">C++, C#</p>
                    </div>
                    <div class="col text-right">
                        <a href="https://github.com/rheidem/Boggle-Solver" target="_blank" class="fa fa-github-square text-right" style="font-size:36px; color: #212529;"></a>
                    </div>
                </div>
            </div>
            <div id="EventScheduler" style="height:1px"></div>
        </div>
        <div class="card mb-5">
            <div class="card-header">
                <h5 class="mb-1"><u>Event Scheduler</u></h5>
                <p class="text-muted text-weight-light mb-0">backtracking, dfs, big-o</p>
            </div>
            <div class="card-body">
                <div class="card-text">
                    <p>
                        My inspiration for this project came from talking with my girlfriend and her mom at a horse riding competition. In the world of Eventing, a certain type of competitive horse riding, things are mainly done traditionally, and I saw a way technology could be implemented to the benefit of many involved.
                    </p>
                    <p>
                        At these events, there are multiple riders all riding at different times throughout multiple days, which is all scheduled by hand. Problem arose when a coach would have multiple riders riding at the same time, and because they cannot be in two places at once, there needed to be a better way to schedule the riders. 
                    </p>
                    <p>
                        This project is presented as a solution. The user inputs all relevant information and is presented with a non-conflicting schedule for all of the riders in any competition. Check out the algorithmic details on GitHub!
                    </p>
                </div>
                <div class="row">
                    <div class="col">
                        <p class="card-text text-muted mb-1"><i>Personal Project</i></p>
                        <p class="card-text text-muted text-weight-light">C++</p>
                    </div>
                    <div class="col text-right">
                        <a href="https://github.com/rheidem/Event-Scheduler" target="_blank" class="fa fa-github-square text-right" style="font-size:36px; color: #212529;"></a>
                    </div>
                </div>
            </div>
            <div id="PersonalWebsite" style="height:1px"></div>
        </div>
        <div class="card mb-5">
            <div class="card-header">
                <h5 class="mb-1"><u>Personal Website</u></h5>
                <p class="text-muted text-weight-light mb-0">web-app, mailkit, azure</p>
            </div>
            <div class="card-body">
                <div class="card-text">
                    <p>
                        Although I had intentions to start this project way long ago, I had the time and knowledge to work on this website during the summer of 2020. It was built using ASP.NET Core, which inherently uses C#, HTML/CSS, etc., but there were multiple challenges I faced when finalizing the site.
                    </p>
                    <p>
                        For one, I greatly wanted to add the Contacts section where users can automatically send me an email from this site. I accomplished this using Mailkit and a shell-account that automatically sends its emails to my personal account. Other challenges included the parallax background on the home page, which I had to write side projects for to randomly generate the stars.
                    </p>
                    <p>
                        All in all, I am proud of the website and have many future plans for improvement including JavaScript animations and usage as well as reworking the site into a new framework.
                    </p>
                </div>
                <div class="row">
                    <div class="col">
                        <p class="card-text text-muted mb-1"><i>Personal Project</i></p>
                        <p class="card-text text-muted text-weight-light">C#, HTML/CSS, JavaScript</p>
                    </div>
                    <div class="col text-right">
                        <a href="https://github.com/rheidem/Personal-Website" target="_blank" class="fa fa-github-square text-right" style="font-size:36px; color: #212529;"></a>
                    </div>
                </div>
            </div>
            <div id="UPSHackathon" style="height:1px"></div>
        </div>
        <div class="card mb-5">
            <div class="card-header">
                <h5 class="mb-1"><u>UPS 2020 Hackathon</u></h5>
                <p class="text-muted text-weight-light mb-0">web-app, hackathon-project</p>
            </div>
            <div class="card-body">
                <div class="card-text">
                    <p>
                        The Career Constructor is a quiz-making web tool for recruiters and talent acquisition specialists to screen applicants based on relevant knowledge. It allows users to create questions, group these questions into quizzes, and assign and grade these quizzes to and from applicants. The value of this project is two-fold. One, it allows HR specialists and managers an easy way to ensure their applicants have relevant knowledge, and two, it highlights candidates with this knowledge in the interview process. The application is aimed towards interns who don't have much real-world experience but have the technical skills. By taking these quizzes they show off what they know, essentially constructing their careers.
                    </p>
                    <p>
                        The project was built using ASP.NET Core, which inherently pulled on C#, HTML/CSS, etc.. We used a local SQL database for storing questions, quizzes, and users, but our group had intentions to use cloud services and extend this application much further than we were able to in just a short two day time period.
                    </p>
                </div>
                <div class="row">
                    <div class="col">
                        <p class="card-text text-muted mb-1"><i>Work-related Project</i></p>
                        <p class="card-text text-muted text-weight-light">C#, HTML/CSS, JavaScript, SQL</p>
                    </div>
                    <div class="col text-right">
                        <a href="https://github.com/rheidem/UPS-Hackathon-2020" target="_blank" class="fa fa-github-square text-right" style="font-size:36px; color: #212529;"></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container text-center py-4">
    <a class="btn btn-outline-dark rounded-0" asp-page="../Index">Home Page</a>
</div>
